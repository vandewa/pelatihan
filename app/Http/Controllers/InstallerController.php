<?php
 namespace App\Http\Controllers; use App\Model\Instructor; use App\Model\SystemSetting; use App\User; use Illuminate\Http\Request; use Illuminate\Support\Facades\Hash; use DB; use Illuminate\Support\Str; use Illuminate\Support\Facades\Http; use URL; class InstallerController extends Controller { protected function welcome() { overWriteEnvFile("\x41\120\x50\137\125\122\x4c", URL::to("\x2f")); return view("\151\156\x73\164\141\154\x6c\x2e\167\x65\x6c\143\157\x6d\145"); } protected function permission() { $permission["\x63\x75\162\154\137\x65\x6e\141\142\154\x65\144"] = function_exists("\x63\165\162\154\137\x76\145\x72\x73\x69\157\156"); $permission["\144\x62\137\x66\151\x6c\145\x5f\167\x72\151\x74\145\x5f\160\x65\162\x6d"] = is_writable(base_path("\x2e\145\x6e\x76")); return view("\x69\x6e\163\x74\x61\x6c\154\x2e\x70\145\x72\x6d\x69\x73\x73\151\x6f\156", compact("\x70\145\x72\x6d\x69\163\x73\x69\157\x6e")); } protected function create() { return view("\x69\156\163\164\x61\x6c\x6c\56\x73\x65\164\165\160"); } protected function dbStore(Request $request) { foreach ($request->types as $type) { overWriteEnvFile($type, $request[$type]); } return redirect()->route("\143\x68\145\143\153\56\x64\142"); } protected function checkDbConnection() { try { DB::connection()->getPdo(); return redirect()->route("\x73\x71\x6c\56\x73\x65\164\x75\x70")->with("\x73\x75\143\x63\145\163\163", "\113\157\156\145\x6b\163\x69\x20\144\x61\164\141\x62\x61\x73\145\40\142\x65\162\150\141\163\x69\x6c\40\144\x69\x6c\x61\x6b\x75\x6b\141\x6e"); } catch (\Exception $e) { return redirect()->route("\x73\x71\x6c\x2e\163\x65\x74\x75\160")->with("\167\162\x6f\x6e\x67", "\124\151\x64\141\x6b\40\x62\151\x73\x61\40\155\145\x6c\141\x6b\x75\153\141\x6e\x20\x6b\157\156\145\x6b\x73\151\40\153\145\40\x64\141\x74\x61\142\x61\163\x65\x2e\x20\123\x69\x6c\141\x68\153\141\x6e\x20\x63\145\x6b\40\153\145\155\x62\141\x6c\151\40\x6b\157\x6e\146\151\x67\x75\162\x61\163\151\x20\x64\141\164\141\x62\141\163\x65"); } } protected function importSql() { return view("\151\156\163\x74\141\154\x6c\56\151\x6d\x70\x6f\162\164\123\x71\154"); } protected function orgCreate() { try { $sql_path = base_path("\142\x6c\153\x2e\163\x71\x6c"); DB::unprepared(file_get_contents($sql_path)); return view("\151\156\163\164\x61\x6c\154\56\x73\145\164\165\x70\x4f\x72\x67"); } catch (Exception $e) { die("\124\145\162\144\141\160\x61\164\40\x6d\x61\x73\x61\x6c\141\150\54\40\123\x69\154\141\150\x6b\141\156\x20\143\x65\153\40\x6b\145\155\142\141\154\151\x20\x6b\x6f\x6e\146\151\x67\165\x72\x61\x73\151\40\144\141\x74\141\142\x61\163\145\x2e\40\145\162\x72\157\162\x3a" . $e); } } public function importDemoSql() { try { $sql_path = base_path("\144\145\155\x6f\x2e\x73\161\x6c"); DB::unprepared(file_get_contents($sql_path)); return view("\x69\x6e\x73\x74\141\154\x6c\56\x69\x6e\x73\164\162\x75\143\x74\157\162\122\145\147"); } catch (Exception $e) { die("\x54\x68\x65\162\145\40\141\x72\x65\x20\163\x6f\x6d\x65\40\x70\162\157\142\154\145\x6d\x73\x2c\40\x50\154\145\141\163\x65\40\x63\x68\x65\x63\x6b\x20\x79\157\x75\x72\x20\143\157\156\x66\151\x67\x75\162\141\164\151\157\156\x2e\40\145\x72\162\157\162\x3a" . $e); } } protected function instructorStore(Request $request) { $request->validate(array("\x6e\141\x6d\x65" => array("\162\x65\161\x75\151\162\x65\x64", "\163\164\162\151\156\x67", "\155\141\x78\72\x32\65\x35"), "\x65\155\x61\151\154" => array("\x72\x65\x71\x75\151\162\145\x64", "\x73\164\x72\x69\x6e\x67", "\145\x6d\141\x69\154", "\x6d\141\170\x3a\62\65\x35", "\x75\x6e\151\x71\165\145\x3a\x75\x73\145\162\163"), "\160\x61\x73\163\x77\x6f\x72\144" => array("\162\x65\161\x75\x69\162\x65\144", "\x73\164\x72\x69\156\147", "\155\151\156\x3a\x38", "\x63\157\156\x66\x69\x72\x6d\145\144")), array("\x6e\141\x6d\145\56\x72\145\161\x75\151\x72\x65\144" => translate("\x4e\x61\x6d\x65\40\x69\x73\x20\x72\145\x71\165\151\162\x65\144"), "\x65\155\x61\151\x6c\x2e\162\x65\x71\165\151\x72\x65\144" => translate("\x45\155\141\151\154\40\x69\163\x20\162\145\x71\x75\151\x72\x65\x64"), "\x65\x6d\141\x69\154\x2e\145\155\x61\151\x6c" => translate("\x69\156\166\x61\x6c\x69\144\40\145\x6d\x61\x69\x6c"), "\x65\x6d\x61\151\154\x2e\x75\156\151\161\165\145" => translate("\x45\155\141\x69\154\x20\x61\x6c\x72\145\141\x64\x79\x20\x65\170\x69\163\x74"), "\160\x61\x73\x73\x77\x6f\x72\x64\56\x75\x6e\151\161\165\x65" => translate("\120\x61\x73\163\167\157\162\144\x20\x69\163\x20\162\145\161\x75\151\x72\145\144"), "\x70\x61\x73\x73\167\157\162\x64\56\155\x69\156" => translate("\x50\x61\163\x73\167\157\x72\x64\40\155\165\163\x74\40\x62\x65\40\155\151\x6e\151\x6d\x75\x6d\40\70\x20\143\x68\x61\162\x61\x63\164\x65\x72\163"), "\x70\141\x73\x73\x77\x6f\x72\x64\56\x63\x6f\156\x66\x69\162\155\145\144" => translate("\120\141\163\163\x77\x6f\162\144\40\144\x69\x64\40\156\x6f\164\x20\x6d\141\164\143\x68\x65\x64"))); $user = User::where("\151\x64", 5)->first(); $user->name = $request->name; $user->slug = Str::slug($request->name) . "\x31"; $user->email = $request->email; $user->verified = true; $user->password = Hash::make($request->password); $user->user_type = "\x49\156\x73\x74\162\165\143\x74\157\162"; if ($user->save()) { $i = Instructor::where("\165\163\145\162\137\151\144", 5)->first(); $i->email = $user->email; $i->name = $user->name; $i->save(); return view("\x69\156\x73\164\141\x6c\154\x2e\163\x65\x74\x75\160\x4f\x72\x67"); } else { return redirect()->back()->with("\146\x61\151\x6c\145\x64", translate("\x54\150\145\x72\145\x20\x61\162\x65\x20\163\157\155\x65\x20\160\x72\x6f\x62\154\x65\x6d\x20\x74\162\171\40\141\x67\x61\151\156")); } } protected function orgSetup(Request $request) { if ($request->hasFile("\x6c\x6f\x67\x6f")) { $system = SystemSetting::where("\164\171\160\145", $request->type_logo)->first(); $system->value = fileUpload($request->logo, "\163\x69\164\x65"); $system->save(); } if ($request->has("\x6e\141\x6d\x65")) { $system = SystemSetting::where("\164\171\160\145", $request->type_name)->first(); $system->value = $request->name; $system->save(); overWriteEnvFile("\x41\x50\x50\137\116\x41\x4d\x45", $request->name); } if ($request->has("\x66\157\x6f\164\145\x72")) { $system = SystemSetting::where("\x74\x79\160\145", $request->type_footer)->first(); $system->value = $request->footer; $system->save(); } if ($request->has("\x66\x62")) { $system = SystemSetting::where("\164\x79\160\x65", $request->type_fb)->first(); $system->value = $request->fb; $system->save(); } if ($request->has("\x74\167")) { $system = SystemSetting::where("\164\x79\x70\145", $request->type_tw)->first(); $system->value = $request->tw; $system->save(); } if ($request->has("\x67\157\157\147\x6c\x65")) { $system = SystemSetting::where("\164\171\160\145", $request->type_google)->first(); $system->value = $request->google; $system->save(); } if ($request->has("\141\x64\144\x72\145\x73\163")) { $system = SystemSetting::where("\164\171\160\145", $request->type_address)->first(); $system->value = $request->address; $system->save(); } if ($request->has("\156\165\155\x62\145\x72")) { $system = SystemSetting::where("\164\x79\x70\x65", $request->type_number)->first(); $system->value = $request->number; $system->save(); } if ($request->has("\x6d\141\x69\x6c")) { $system = SystemSetting::where("\x74\x79\160\145", $request->type_mail)->first(); $system->value = $request->mail; $system->save(); } if ($request->has("\146\137\x6c\x6f\x67\157")) { $system = SystemSetting::where("\164\171\x70\145", $request->footer_logo)->first(); $system->value = fileUpload($request->f_logo, "\x73\151\164\x65"); $system->save(); } if ($request->has("\146\137\x69\143\x6f\156")) { $system = SystemSetting::where("\x74\171\160\x65", $request->favicon_icon)->first(); $system->value = fileUpload($request->f_icon, "\163\x69\164\x65"); $system->save(); } return redirect()->route("\141\144\x6d\151\156\x2e\x63\162\145\x61\164\x65"); } protected function adminCreate() { return view("\151\x6e\x73\x74\141\x6c\154\x2e\165\x73\145\162"); } protected function adminStore(Request $request) { $request->validate(array("\156\x61\x6d\145" => array("\x72\x65\x71\x75\x69\x72\x65\x64", "\x73\164\x72\x69\156\147", "\x6d\141\170\72\x32\65\x35"), "\145\x6d\x61\151\154" => array("\162\x65\161\165\x69\x72\145\x64", "\x73\x74\x72\151\156\x67", "\145\155\141\151\154", "\x6d\141\170\x3a\62\65\65", "\x75\x6e\x69\x71\165\x65\72\165\x73\x65\162\163"), "\x70\141\163\x73\167\x6f\x72\144" => array("\162\145\x71\165\x69\x72\145\144", "\x73\x74\x72\151\x6e\x67", "\155\151\x6e\72\70", "\143\x6f\156\146\x69\162\155\x65\144")), array("\x6e\141\155\145\x2e\x72\145\x71\165\x69\x72\x65\144" => translate("\x4e\x61\155\145\40\x69\x73\x20\162\x65\x71\165\151\x72\145\144"), "\x65\155\x61\x69\154\56\162\x65\x71\165\151\x72\145\144" => translate("\105\x6d\141\x69\x6c\x20\151\x73\40\162\x65\161\165\151\x72\x65\144"), "\x65\x6d\141\x69\154\56\145\155\141\x69\x6c" => translate("\x69\x6e\166\x61\x6c\151\x64\40\x65\155\x61\x69\x6c"), "\145\155\141\x69\154\x2e\165\156\x69\x71\x75\145" => translate("\x45\155\141\x69\x6c\x20\x61\x6c\x72\x65\x61\144\171\40\x65\170\x69\163\164"), "\160\x61\163\163\167\157\x72\x64\56\x75\156\151\x71\x75\145" => translate("\x50\141\x73\x73\167\x6f\162\x64\x20\151\163\40\162\x65\161\165\151\162\145\x64"), "\x70\x61\x73\x73\167\157\162\144\56\x6d\151\156" => translate("\x50\141\163\163\167\157\162\144\x20\x6d\x75\x73\164\x20\142\145\x20\x6d\151\156\x69\x6d\x75\x6d\x20\x38\x20\143\150\x61\162\141\143\164\145\x72\x73"), "\160\141\163\x73\167\157\162\x64\x2e\143\157\156\x66\151\x72\155\145\144" => translate("\x50\141\x73\163\x77\x6f\162\144\40\144\151\144\40\156\x6f\164\40\155\x61\164\143\x68\145\x64"))); $user = new User(); $user->name = $request->name; $user->slug = Str::slug($request->name); $user->email = $request->email; $user->verified = true; $user->password = Hash::make($request->password); $user->user_type = "\101\144\x6d\x69\x6e"; $response = Http::post("\150\x74\164\160\163\x3a\57\x2f\166\x65\162\x69\146\x79\56\x77\145\163\143\x6c\x69\x63\x2e\x73\164\165\144\151\x6f\57\x61\160\x69\x2f\167\145\x62\x61\165\164\150\163\x74\165\x64\x69\x6f\x77", array("\x70\x75\162\x63\x68\x61\163\145\x5f\x6b\145\x79" => $request->purchase_key, "\x69\x70\x5f\x61\144\144\x72\x65\163\163" => $request->ip_address, "\x64\157\x6d\x61\151\156\137\x6e\x61\x6d\145" => $request->domain_name, "\x70\162\x6f\144\x75\x6b" => "\123\111\120\102\114\113")); if ($response == "\x63\x6f\156\164\x69\x6e\165\x65") { if ($user->save()) { overWriteEnvFile("\115\x49\x58\137\x50\x55\x53\110\x45\x52\137\101\120\120\137\x43\114\x55\x53\x54\105\x52\137\123\105\103\x55\x52\x45", "\x37\64\x36\71\x61\x32\x38\x36\x32\x35\71\x37\x39\x39\x65\65\x62\x33\67\x65\x35\144\x62\71\62\71\66\146\x30\x30\142\x33"); $se = Str::before(env("\101\120\120\137\125\122\x4c"), "\57\160\x75\142\x6c\x69\143"); overWriteEnvFile("\101\120\x50\x5f\125\x52\x4c", $se); return view("\151\x6e\163\164\x61\x6c\154\x2e\x64\x6f\x6e\145"); } else { return redirect()->back()->with("\146\x61\151\x6c\x65\x64", translate("\x41\144\141\x20\171\141\156\147\x20\x62\145\x72\155\141\x73\141\x6c\x61\x68\41\x20\103\157\x62\141\40\x4c\x61\x67\x69\x2e")); } } elseif ($response == "\x69\156\166\141\154\151\144\x4b\x65\171") { return redirect()->back()->with("\151\156\166\x61\154\x69\x64\113\145\x79", translate("\x4d\x6f\x68\x6f\x6e\x20\155\x61\141\x66\54\40\x6b\x65\x79\x20\171\141\156\x67\40\144\151\x6d\141\163\x75\153\153\141\x6e\x20\164\x69\x64\x61\x6b\x20\166\141\x6c\151\144")); } else { return redirect()->back()->with("\x75\163\145\144", "\120\x72\157\x64\x75\153\x20\151\156\151\40\164\x65\x6c\141\x68\x20\x64\151\147\165\156\x61\x6b\141\156\40\x64\x69\x20\x64\157\155\x61\151\x6e\40" . $response . "\54\x20\153\x6f\156\x74\x61\153\40\127\x65\x73\143\x6c\151\x63\40\x53\x74\165\x64\151\x6f\167\40\165\156\164\165\x6b\x20\155\145\x6e\147\x67\141\156\164\151\40\144\x6f\x6d\141\151\x6e"); } } }